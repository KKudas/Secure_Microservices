https:
  port: 8080
  hostname: localhost
  tls:
    "default":
      key: "../localhost-key.pem"
      cert: "../localhost-cert.pem"
apiEndpoints:
  productsApi:
    host: localhost
    paths: "/products/*"
  usersApi:
    host: localhost
    paths: "/users/*"
  ordersApi:
    host: localhost
    paths: "/orders/*"
serviceEndpoints:
  products:
    url: https://localhost:3001
  users:
    url: https://localhost:3002
  orders:
    url: https://localhost:3003

policies:
  - basic-auth
  - expression
  - log
  - proxy
  - rate-limit
  - jwt

pipelines:
  productsPipeline:
    apiEndpoints:
      - productsApi
    policies:
      - proxy:
          - action:
              serviceEndpoint: products
              conditions:
                - http.request.method: "GET"
                - http.request.path: "/products/[0-9]+$"
          - action:
              serviceEndpoint: products
              conditions:
                - http.request.method: "GET"
                - http.request.path: "/products/all"
      - jwt:
          action:
            secretOrPublicKey: "Microservice"
            checkCredentialExistence: false
  usersPipeline:
    apiEndpoints:
      - usersApi
    policies:
      - proxy:
          - action:
              serviceEndpoint: users
              conditions:
                - http.request.method: "POST"
                - http.request.path: "/users/login"
          - action:
              serviceEndpoint: users
              conditions:
                - http.request.method: "POST"
                - http.request.path: "/users"
  ordersPipeline:
    apiEndpoints:
      - ordersApi
    policies:
      - jwt:
          action:
            secretOrPublicKey: "Microservice"
            checkCredentialExistence: false
      - proxy:
          - action:
              serviceEndpoint: orders
